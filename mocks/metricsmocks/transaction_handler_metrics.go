// Code generated by mockery v2.22.1. DO NOT EDIT.

package metricsmocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// TransactionHandlerMetrics is an autogenerated mock type for the TransactionHandlerMetrics type
type TransactionHandlerMetrics struct {
	mock.Mock
}

// IncTxHandlerCounterMetric provides a mock function with given fields: ctx, metricName
func (_m *TransactionHandlerMetrics) IncTxHandlerCounterMetric(ctx context.Context, metricName string) {
	_m.Called(ctx, metricName)
}

// IncTxHandlerCounterMetricWithLabels provides a mock function with given fields: ctx, metricName, labels
func (_m *TransactionHandlerMetrics) IncTxHandlerCounterMetricWithLabels(ctx context.Context, metricName string, labels map[string]string) {
	_m.Called(ctx, metricName, labels)
}

// InitTxHandlerCounterMetric provides a mock function with given fields: ctx, metricName, helpText
func (_m *TransactionHandlerMetrics) InitTxHandlerCounterMetric(ctx context.Context, metricName string, helpText string) {
	_m.Called(ctx, metricName, helpText)
}

// InitTxHandlerCounterMetricWithLabels provides a mock function with given fields: ctx, metricName, helpText, labelNames
func (_m *TransactionHandlerMetrics) InitTxHandlerCounterMetricWithLabels(ctx context.Context, metricName string, helpText string, labelNames []string) {
	_m.Called(ctx, metricName, helpText, labelNames)
}

// InitTxHandlerGaugeMetric provides a mock function with given fields: ctx, metricName, helpText
func (_m *TransactionHandlerMetrics) InitTxHandlerGaugeMetric(ctx context.Context, metricName string, helpText string) {
	_m.Called(ctx, metricName, helpText)
}

// InitTxHandlerGaugeMetricWithLabels provides a mock function with given fields: ctx, metricName, helpText, labelNames
func (_m *TransactionHandlerMetrics) InitTxHandlerGaugeMetricWithLabels(ctx context.Context, metricName string, helpText string, labelNames []string) {
	_m.Called(ctx, metricName, helpText, labelNames)
}

// InitTxHandlerHistogramMetric provides a mock function with given fields: ctx, metricName, helpText, buckets
func (_m *TransactionHandlerMetrics) InitTxHandlerHistogramMetric(ctx context.Context, metricName string, helpText string, buckets []float64) {
	_m.Called(ctx, metricName, helpText, buckets)
}

// InitTxHandlerHistogramMetricWithLabels provides a mock function with given fields: ctx, metricName, helpText, buckets, labelNames
func (_m *TransactionHandlerMetrics) InitTxHandlerHistogramMetricWithLabels(ctx context.Context, metricName string, helpText string, buckets []float64, labelNames []string) {
	_m.Called(ctx, metricName, helpText, buckets, labelNames)
}

// ObserveTxHandlerHistogramMetric provides a mock function with given fields: ctx, metricName, number
func (_m *TransactionHandlerMetrics) ObserveTxHandlerHistogramMetric(ctx context.Context, metricName string, number float64) {
	_m.Called(ctx, metricName, number)
}

// ObserveTxHandlerHistogramMetricWithLabels provides a mock function with given fields: ctx, metricName, number, labels
func (_m *TransactionHandlerMetrics) ObserveTxHandlerHistogramMetricWithLabels(ctx context.Context, metricName string, number float64, labels map[string]string) {
	_m.Called(ctx, metricName, number, labels)
}

// SetTxHandlerGaugeMetric provides a mock function with given fields: ctx, metricName, number
func (_m *TransactionHandlerMetrics) SetTxHandlerGaugeMetric(ctx context.Context, metricName string, number float64) {
	_m.Called(ctx, metricName, number)
}

// SetTxHandlerGaugeMetricWithLabels provides a mock function with given fields: ctx, metricName, number, labels
func (_m *TransactionHandlerMetrics) SetTxHandlerGaugeMetricWithLabels(ctx context.Context, metricName string, number float64, labels map[string]string) {
	_m.Called(ctx, metricName, number, labels)
}

type mockConstructorTestingTNewTransactionHandlerMetrics interface {
	mock.TestingT
	Cleanup(func())
}

// NewTransactionHandlerMetrics creates a new instance of TransactionHandlerMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransactionHandlerMetrics(t mockConstructorTestingTNewTransactionHandlerMetrics) *TransactionHandlerMetrics {
	mock := &TransactionHandlerMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
